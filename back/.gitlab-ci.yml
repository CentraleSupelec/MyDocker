variables:
  MAVEN_OPTS: "-Dmaven.repo.local=.m2"

image: eclipse-temurin:17

lint:
  tags:
    - docker
  script:
    - ./mvnw checkstyle:check
  except:
    - tags
    - master

test:
  variables:
    SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/mydocker
    SPRING_DATASOURCE_USERNAME: mydocker
    SPRING_DATASOURCE_PASSWORD: mydocker
  services:
    - name: postgres:13
      alias: postgres
      entrypoint:
      - /bin/sh
      command:
      - -c
      - echo "CREATE EXTENSION citext;" > /docker-entrypoint-initdb.d/citext.sql && exec docker-entrypoint.sh postgres
      variables:
        POSTGRES_DB: mydocker
        POSTGRES_USER: mydocker
        POSTGRES_PASSWORD: mydocker
  tags:
    - docker
  before_script:
    - openssl genrsa -traditional -out src/main/resources/private_key.pem 4096
    - openssl rsa -traditional -pubout -in src/main/resources/private_key.pem -out src/main/resources/public_key.pem
  script:
    - ./mvnw generate-sources
    - ./mvnw test || { [ "$DEBUG" = "true" ] && sleep 3600; }
  except:
    - tags
    - master

.build_artifacts_template: &build_artifacts_definition
  stage: deploy
  tags:
    - docker
  script:
    - "[[ -z \"${CI_COMMIT_TAG}\" ]] && export VERSION=\"${CI_COMMIT_SHA}-SNAPSHOT\" || export VERSION=\"${CI_COMMIT_TAG}\""
    - "echo \"Setting version to: ${VERSION}\""
    - ./mvnw versions:set -DgenerateBackupPoms=false -DnewVersion=${VERSION}
    - ./mvnw package -DskipTests

build_uploaded_artifacts:
  <<: *build_artifacts_definition
  artifacts:
    paths:
      - target/thuv.jar
  only:
    - tags
    - master

build_worthless_artifacts:
  <<: *build_artifacts_definition
  except:
    - tags
    - master

deploy_github:
  image: alpine:3.19.1
  stage: deploy
  only:
    - tags
  needs:
    - build_uploaded_artifacts
  before_script:
    - apk add zip github-cli
    - zip -r artifacts.zip target
  script:
    - gh release --repo CentraleSupelec/mydocker create back-${CI_COMMIT_TAG} --notes ""
    - gh release --repo CentraleSupelec/mydocker upload back-${CI_COMMIT_TAG} artifacts.zip
  tags:
    - docker
