// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.21.9
// source: containerService.proto

package protobuf

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type DockerImageResponse_Status int32

const (
	DockerImageResponse_BUILDING DockerImageResponse_Status = 0
	DockerImageResponse_DONE     DockerImageResponse_Status = 1
	DockerImageResponse_ERROR    DockerImageResponse_Status = 2
)

// Enum value maps for DockerImageResponse_Status.
var (
	DockerImageResponse_Status_name = map[int32]string{
		0: "BUILDING",
		1: "DONE",
		2: "ERROR",
	}
	DockerImageResponse_Status_value = map[string]int32{
		"BUILDING": 0,
		"DONE":     1,
		"ERROR":    2,
	}
)

func (x DockerImageResponse_Status) Enum() *DockerImageResponse_Status {
	p := new(DockerImageResponse_Status)
	*p = x
	return p
}

func (x DockerImageResponse_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DockerImageResponse_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_containerService_proto_enumTypes[0].Descriptor()
}

func (DockerImageResponse_Status) Type() protoreflect.EnumType {
	return &file_containerService_proto_enumTypes[0]
}

func (x DockerImageResponse_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DockerImageResponse_Status.Descriptor instead.
func (DockerImageResponse_Status) EnumDescriptor() ([]byte, []int) {
	return file_containerService_proto_rawDescGZIP(), []int{25, 0}
}

type DeployResponse_Status int32

const (
	DeployResponse_RUNNING DeployResponse_Status = 0
	DeployResponse_DONE    DeployResponse_Status = 1
	DeployResponse_ERROR   DeployResponse_Status = 2
	DeployResponse_SKIPPED DeployResponse_Status = 3
)

// Enum value maps for DeployResponse_Status.
var (
	DeployResponse_Status_name = map[int32]string{
		0: "RUNNING",
		1: "DONE",
		2: "ERROR",
		3: "SKIPPED",
	}
	DeployResponse_Status_value = map[string]int32{
		"RUNNING": 0,
		"DONE":    1,
		"ERROR":   2,
		"SKIPPED": 3,
	}
)

func (x DeployResponse_Status) Enum() *DeployResponse_Status {
	p := new(DeployResponse_Status)
	*p = x
	return p
}

func (x DeployResponse_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DeployResponse_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_containerService_proto_enumTypes[1].Descriptor()
}

func (DeployResponse_Status) Type() protoreflect.EnumType {
	return &file_containerService_proto_enumTypes[1]
}

func (x DeployResponse_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DeployResponse_Status.Descriptor instead.
func (DeployResponse_Status) EnumDescriptor() ([]byte, []int) {
	return file_containerService_proto_rawDescGZIP(), []int{28, 0}
}

type NodeIPRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID   string `protobuf:"bytes,1,opt,name=userID,proto3" json:"userID,omitempty"`
	CourseID string `protobuf:"bytes,2,opt,name=courseID,proto3" json:"courseID,omitempty"`
}

func (x *NodeIPRequest) Reset() {
	*x = NodeIPRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_containerService_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NodeIPRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeIPRequest) ProtoMessage() {}

func (x *NodeIPRequest) ProtoReflect() protoreflect.Message {
	mi := &file_containerService_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeIPRequest.ProtoReflect.Descriptor instead.
func (*NodeIPRequest) Descriptor() ([]byte, []int) {
	return file_containerService_proto_rawDescGZIP(), []int{0}
}

func (x *NodeIPRequest) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *NodeIPRequest) GetCourseID() string {
	if x != nil {
		return x.CourseID
	}
	return ""
}

type NodeIPResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IPAddress string `protobuf:"bytes,1,opt,name=IPAddress,proto3" json:"IPAddress,omitempty"`
}

func (x *NodeIPResponse) Reset() {
	*x = NodeIPResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_containerService_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NodeIPResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeIPResponse) ProtoMessage() {}

func (x *NodeIPResponse) ProtoReflect() protoreflect.Message {
	mi := &file_containerService_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeIPResponse.ProtoReflect.Descriptor instead.
func (*NodeIPResponse) Descriptor() ([]byte, []int) {
	return file_containerService_proto_rawDescGZIP(), []int{1}
}

func (x *NodeIPResponse) GetIPAddress() string {
	if x != nil {
		return x.IPAddress
	}
	return ""
}

type InitAutoscalingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Owners map[string]*OwnerAutoscalingConfig `protobuf:"bytes,1,rep,name=owners,proto3" json:"owners,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *InitAutoscalingRequest) Reset() {
	*x = InitAutoscalingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_containerService_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InitAutoscalingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InitAutoscalingRequest) ProtoMessage() {}

func (x *InitAutoscalingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_containerService_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InitAutoscalingRequest.ProtoReflect.Descriptor instead.
func (*InitAutoscalingRequest) Descriptor() ([]byte, []int) {
	return file_containerService_proto_rawDescGZIP(), []int{2}
}

func (x *InitAutoscalingRequest) GetOwners() map[string]*OwnerAutoscalingConfig {
	if x != nil {
		return x.Owners
	}
	return nil
}

type OwnerAutoscalingConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InstanceType      string           `protobuf:"bytes,2,opt,name=instanceType,proto3" json:"instanceType,omitempty"`
	MinIdleNodesCount int64            `protobuf:"varint,3,opt,name=minIdleNodesCount,proto3" json:"minIdleNodesCount,omitempty"`
	MaxNodesCount     int64            `protobuf:"varint,4,opt,name=maxNodesCount,proto3" json:"maxNodesCount,omitempty"`
	ManualNodesCount  int64            `protobuf:"varint,6,opt,name=manualNodesCount,proto3" json:"manualNodesCount,omitempty"`
	Regions           []*ScalingRegion `protobuf:"bytes,7,rep,name=regions,proto3" json:"regions,omitempty"`
}

func (x *OwnerAutoscalingConfig) Reset() {
	*x = OwnerAutoscalingConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_containerService_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OwnerAutoscalingConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OwnerAutoscalingConfig) ProtoMessage() {}

func (x *OwnerAutoscalingConfig) ProtoReflect() protoreflect.Message {
	mi := &file_containerService_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OwnerAutoscalingConfig.ProtoReflect.Descriptor instead.
func (*OwnerAutoscalingConfig) Descriptor() ([]byte, []int) {
	return file_containerService_proto_rawDescGZIP(), []int{3}
}

func (x *OwnerAutoscalingConfig) GetInstanceType() string {
	if x != nil {
		return x.InstanceType
	}
	return ""
}

func (x *OwnerAutoscalingConfig) GetMinIdleNodesCount() int64 {
	if x != nil {
		return x.MinIdleNodesCount
	}
	return 0
}

func (x *OwnerAutoscalingConfig) GetMaxNodesCount() int64 {
	if x != nil {
		return x.MaxNodesCount
	}
	return 0
}

func (x *OwnerAutoscalingConfig) GetManualNodesCount() int64 {
	if x != nil {
		return x.ManualNodesCount
	}
	return 0
}

func (x *OwnerAutoscalingConfig) GetRegions() []*ScalingRegion {
	if x != nil {
		return x.Regions
	}
	return nil
}

type ScalingRegion struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ImageId string `protobuf:"bytes,1,opt,name=imageId,proto3" json:"imageId,omitempty"`
	Region  string `protobuf:"bytes,2,opt,name=region,proto3" json:"region,omitempty"`
}

func (x *ScalingRegion) Reset() {
	*x = ScalingRegion{}
	if protoimpl.UnsafeEnabled {
		mi := &file_containerService_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScalingRegion) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScalingRegion) ProtoMessage() {}

func (x *ScalingRegion) ProtoReflect() protoreflect.Message {
	mi := &file_containerService_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScalingRegion.ProtoReflect.Descriptor instead.
func (*ScalingRegion) Descriptor() ([]byte, []int) {
	return file_containerService_proto_rawDescGZIP(), []int{4}
}

func (x *ScalingRegion) GetImageId() string {
	if x != nil {
		return x.ImageId
	}
	return ""
}

func (x *ScalingRegion) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

type InitAutoscalingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error string `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *InitAutoscalingResponse) Reset() {
	*x = InitAutoscalingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_containerService_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InitAutoscalingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InitAutoscalingResponse) ProtoMessage() {}

func (x *InitAutoscalingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_containerService_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InitAutoscalingResponse.ProtoReflect.Descriptor instead.
func (*InitAutoscalingResponse) Descriptor() ([]byte, []int) {
	return file_containerService_proto_rawDescGZIP(), []int{5}
}

func (x *InitAutoscalingResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type LogRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID   string `protobuf:"bytes,1,opt,name=userID,proto3" json:"userID,omitempty"`
	CourseID string `protobuf:"bytes,2,opt,name=courseID,proto3" json:"courseID,omitempty"`
}

func (x *LogRequest) Reset() {
	*x = LogRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_containerService_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LogRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogRequest) ProtoMessage() {}

func (x *LogRequest) ProtoReflect() protoreflect.Message {
	mi := &file_containerService_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogRequest.ProtoReflect.Descriptor instead.
func (*LogRequest) Descriptor() ([]byte, []int) {
	return file_containerService_proto_rawDescGZIP(), []int{6}
}

func (x *LogRequest) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *LogRequest) GetCourseID() string {
	if x != nil {
		return x.CourseID
	}
	return ""
}

type LogResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Logs string `protobuf:"bytes,1,opt,name=logs,proto3" json:"logs,omitempty"`
}

func (x *LogResponse) Reset() {
	*x = LogResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_containerService_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LogResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogResponse) ProtoMessage() {}

func (x *LogResponse) ProtoReflect() protoreflect.Message {
	mi := &file_containerService_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogResponse.ProtoReflect.Descriptor instead.
func (*LogResponse) Descriptor() ([]byte, []int) {
	return file_containerService_proto_rawDescGZIP(), []int{7}
}

func (x *LogResponse) GetLogs() string {
	if x != nil {
		return x.Logs
	}
	return ""
}

type UserPasswordMethod struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username string `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	Password string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
}

func (x *UserPasswordMethod) Reset() {
	*x = UserPasswordMethod{}
	if protoimpl.UnsafeEnabled {
		mi := &file_containerService_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserPasswordMethod) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserPasswordMethod) ProtoMessage() {}

func (x *UserPasswordMethod) ProtoReflect() protoreflect.Message {
	mi := &file_containerService_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserPasswordMethod.ProtoReflect.Descriptor instead.
func (*UserPasswordMethod) Descriptor() ([]byte, []int) {
	return file_containerService_proto_rawDescGZIP(), []int{8}
}

func (x *UserPasswordMethod) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *UserPasswordMethod) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type AuthenticationKeyMethod struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GeneratedKey string `protobuf:"bytes,1,opt,name=generatedKey,proto3" json:"generatedKey,omitempty"`
}

func (x *AuthenticationKeyMethod) Reset() {
	*x = AuthenticationKeyMethod{}
	if protoimpl.UnsafeEnabled {
		mi := &file_containerService_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthenticationKeyMethod) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthenticationKeyMethod) ProtoMessage() {}

func (x *AuthenticationKeyMethod) ProtoReflect() protoreflect.Message {
	mi := &file_containerService_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthenticationKeyMethod.ProtoReflect.Descriptor instead.
func (*AuthenticationKeyMethod) Descriptor() ([]byte, []int) {
	return file_containerService_proto_rawDescGZIP(), []int{9}
}

func (x *AuthenticationKeyMethod) GetGeneratedKey() string {
	if x != nil {
		return x.GeneratedKey
	}
	return ""
}

type ResourceLimit struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NanoCPUs    int64 `protobuf:"varint,1,opt,name=nanoCPUs,proto3" json:"nanoCPUs,omitempty"`
	MemoryBytes int64 `protobuf:"varint,2,opt,name=memoryBytes,proto3" json:"memoryBytes,omitempty"`
}

func (x *ResourceLimit) Reset() {
	*x = ResourceLimit{}
	if protoimpl.UnsafeEnabled {
		mi := &file_containerService_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResourceLimit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceLimit) ProtoMessage() {}

func (x *ResourceLimit) ProtoReflect() protoreflect.Message {
	mi := &file_containerService_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceLimit.ProtoReflect.Descriptor instead.
func (*ResourceLimit) Descriptor() ([]byte, []int) {
	return file_containerService_proto_rawDescGZIP(), []int{10}
}

func (x *ResourceLimit) GetNanoCPUs() int64 {
	if x != nil {
		return x.NanoCPUs
	}
	return 0
}

func (x *ResourceLimit) GetMemoryBytes() int64 {
	if x != nil {
		return x.MemoryBytes
	}
	return 0
}

type Metadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tags map[string]string `protobuf:"bytes,1,rep,name=tags,proto3" json:"tags,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *Metadata) Reset() {
	*x = Metadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_containerService_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Metadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Metadata) ProtoMessage() {}

func (x *Metadata) ProtoReflect() protoreflect.Message {
	mi := &file_containerService_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Metadata.ProtoReflect.Descriptor instead.
func (*Metadata) Descriptor() ([]byte, []int) {
	return file_containerService_proto_rawDescGZIP(), []int{11}
}

func (x *Metadata) GetTags() map[string]string {
	if x != nil {
		return x.Tags
	}
	return nil
}

type RequestPort struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Description               string `protobuf:"bytes,1,opt,name=description,proto3" json:"description,omitempty"`
	ConnexionType             string `protobuf:"bytes,2,opt,name=connexionType,proto3" json:"connexionType,omitempty"`
	PortToMap                 uint32 `protobuf:"varint,3,opt,name=portToMap,proto3" json:"portToMap,omitempty"`
	RequiredToAccessContainer bool   `protobuf:"varint,4,opt,name=requiredToAccessContainer,proto3" json:"requiredToAccessContainer,omitempty"`
}

func (x *RequestPort) Reset() {
	*x = RequestPort{}
	if protoimpl.UnsafeEnabled {
		mi := &file_containerService_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestPort) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestPort) ProtoMessage() {}

func (x *RequestPort) ProtoReflect() protoreflect.Message {
	mi := &file_containerService_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestPort.ProtoReflect.Descriptor instead.
func (*RequestPort) Descriptor() ([]byte, []int) {
	return file_containerService_proto_rawDescGZIP(), []int{12}
}

func (x *RequestPort) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *RequestPort) GetConnexionType() string {
	if x != nil {
		return x.ConnexionType
	}
	return ""
}

func (x *RequestPort) GetPortToMap() uint32 {
	if x != nil {
		return x.PortToMap
	}
	return 0
}

func (x *RequestPort) GetRequiredToAccessContainer() bool {
	if x != nil {
		return x.RequiredToAccessContainer
	}
	return false
}

type ResponsePort struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Description               string `protobuf:"bytes,1,opt,name=description,proto3" json:"description,omitempty"`
	ConnexionType             string `protobuf:"bytes,2,opt,name=connexionType,proto3" json:"connexionType,omitempty"`
	PortToMap                 uint32 `protobuf:"varint,3,opt,name=portToMap,proto3" json:"portToMap,omitempty"`
	MapTo                     uint32 `protobuf:"varint,4,opt,name=mapTo,proto3" json:"mapTo,omitempty"`
	RequiredToAccessContainer bool   `protobuf:"varint,5,opt,name=requiredToAccessContainer,proto3" json:"requiredToAccessContainer,omitempty"`
}

func (x *ResponsePort) Reset() {
	*x = ResponsePort{}
	if protoimpl.UnsafeEnabled {
		mi := &file_containerService_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponsePort) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponsePort) ProtoMessage() {}

func (x *ResponsePort) ProtoReflect() protoreflect.Message {
	mi := &file_containerService_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponsePort.ProtoReflect.Descriptor instead.
func (*ResponsePort) Descriptor() ([]byte, []int) {
	return file_containerService_proto_rawDescGZIP(), []int{13}
}

func (x *ResponsePort) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ResponsePort) GetConnexionType() string {
	if x != nil {
		return x.ConnexionType
	}
	return ""
}

func (x *ResponsePort) GetPortToMap() uint32 {
	if x != nil {
		return x.PortToMap
	}
	return 0
}

func (x *ResponsePort) GetMapTo() uint32 {
	if x != nil {
		return x.MapTo
	}
	return 0
}

func (x *ResponsePort) GetRequiredToAccessContainer() bool {
	if x != nil {
		return x.RequiredToAccessContainer
	}
	return false
}

type Label struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key   string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *Label) Reset() {
	*x = Label{}
	if protoimpl.UnsafeEnabled {
		mi := &file_containerService_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Label) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Label) ProtoMessage() {}

func (x *Label) ProtoReflect() protoreflect.Message {
	mi := &file_containerService_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Label.ProtoReflect.Descriptor instead.
func (*Label) Descriptor() ([]byte, []int) {
	return file_containerService_proto_rawDescGZIP(), []int{14}
}

func (x *Label) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *Label) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type ContainerRequestOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ForceRecreate     bool                                             `protobuf:"varint,1,opt,name=forceRecreate,proto3" json:"forceRecreate,omitempty"`
	AuthenticationKey *ContainerRequestOptions_AuthenticationKeyOption `protobuf:"bytes,2,opt,name=authenticationKey,proto3" json:"authenticationKey,omitempty"`
	SaveStudentWork   bool                                             `protobuf:"varint,3,opt,name=saveStudentWork,proto3" json:"saveStudentWork,omitempty"`
	WorkdirSize       uint32                                           `protobuf:"varint,4,opt,name=workdirSize,proto3" json:"workdirSize,omitempty"`
	WorkdirPath       string                                           `protobuf:"bytes,5,opt,name=workdirPath,proto3" json:"workdirPath,omitempty"`
	Limit             *ResourceLimit                                   `protobuf:"bytes,6,opt,name=limit,proto3" json:"limit,omitempty"`
	UserPassword      *UserPasswordMethod                              `protobuf:"bytes,7,opt,name=userPassword,proto3" json:"userPassword,omitempty"`
	GenericResources  map[string]uint32                                `protobuf:"bytes,8,rep,name=genericResources,proto3" json:"genericResources,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	ForbiddenLabels   []*Label                                         `protobuf:"bytes,9,rep,name=forbiddenLabels,proto3" json:"forbiddenLabels,omitempty"`
	MandatoryLabels   []*Label                                         `protobuf:"bytes,10,rep,name=mandatoryLabels,proto3" json:"mandatoryLabels,omitempty"`
}

func (x *ContainerRequestOptions) Reset() {
	*x = ContainerRequestOptions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_containerService_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContainerRequestOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContainerRequestOptions) ProtoMessage() {}

func (x *ContainerRequestOptions) ProtoReflect() protoreflect.Message {
	mi := &file_containerService_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContainerRequestOptions.ProtoReflect.Descriptor instead.
func (*ContainerRequestOptions) Descriptor() ([]byte, []int) {
	return file_containerService_proto_rawDescGZIP(), []int{15}
}

func (x *ContainerRequestOptions) GetForceRecreate() bool {
	if x != nil {
		return x.ForceRecreate
	}
	return false
}

func (x *ContainerRequestOptions) GetAuthenticationKey() *ContainerRequestOptions_AuthenticationKeyOption {
	if x != nil {
		return x.AuthenticationKey
	}
	return nil
}

func (x *ContainerRequestOptions) GetSaveStudentWork() bool {
	if x != nil {
		return x.SaveStudentWork
	}
	return false
}

func (x *ContainerRequestOptions) GetWorkdirSize() uint32 {
	if x != nil {
		return x.WorkdirSize
	}
	return 0
}

func (x *ContainerRequestOptions) GetWorkdirPath() string {
	if x != nil {
		return x.WorkdirPath
	}
	return ""
}

func (x *ContainerRequestOptions) GetLimit() *ResourceLimit {
	if x != nil {
		return x.Limit
	}
	return nil
}

func (x *ContainerRequestOptions) GetUserPassword() *UserPasswordMethod {
	if x != nil {
		return x.UserPassword
	}
	return nil
}

func (x *ContainerRequestOptions) GetGenericResources() map[string]uint32 {
	if x != nil {
		return x.GenericResources
	}
	return nil
}

func (x *ContainerRequestOptions) GetForbiddenLabels() []*Label {
	if x != nil {
		return x.ForbiddenLabels
	}
	return nil
}

func (x *ContainerRequestOptions) GetMandatoryLabels() []*Label {
	if x != nil {
		return x.MandatoryLabels
	}
	return nil
}

type ContainerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID   string                   `protobuf:"bytes,1,opt,name=userID,proto3" json:"userID,omitempty"`
	CourseID string                   `protobuf:"bytes,2,opt,name=courseID,proto3" json:"courseID,omitempty"`
	ImageID  string                   `protobuf:"bytes,3,opt,name=imageID,proto3" json:"imageID,omitempty"`
	Metadata *Metadata                `protobuf:"bytes,4,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Options  *ContainerRequestOptions `protobuf:"bytes,5,opt,name=options,proto3" json:"options,omitempty"`
	Ports    []*RequestPort           `protobuf:"bytes,6,rep,name=ports,proto3" json:"ports,omitempty"`
}

func (x *ContainerRequest) Reset() {
	*x = ContainerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_containerService_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContainerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContainerRequest) ProtoMessage() {}

func (x *ContainerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_containerService_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContainerRequest.ProtoReflect.Descriptor instead.
func (*ContainerRequest) Descriptor() ([]byte, []int) {
	return file_containerService_proto_rawDescGZIP(), []int{16}
}

func (x *ContainerRequest) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *ContainerRequest) GetCourseID() string {
	if x != nil {
		return x.CourseID
	}
	return ""
}

func (x *ContainerRequest) GetImageID() string {
	if x != nil {
		return x.ImageID
	}
	return ""
}

func (x *ContainerRequest) GetMetadata() *Metadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *ContainerRequest) GetOptions() *ContainerRequestOptions {
	if x != nil {
		return x.Options
	}
	return nil
}

func (x *ContainerRequest) GetPorts() []*RequestPort {
	if x != nil {
		return x.Ports
	}
	return nil
}

type ContainerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID    string                   `protobuf:"bytes,1,opt,name=userID,proto3" json:"userID,omitempty"`
	CourseID  string                   `protobuf:"bytes,2,opt,name=courseID,proto3" json:"courseID,omitempty"`
	ImageID   string                   `protobuf:"bytes,3,opt,name=imageID,proto3" json:"imageID,omitempty"`
	Ports     []*ResponsePort          `protobuf:"bytes,4,rep,name=ports,proto3" json:"ports,omitempty"`
	IpAddress string                   `protobuf:"bytes,5,opt,name=ipAddress,proto3" json:"ipAddress,omitempty"`
	Options   *ContainerRequestOptions `protobuf:"bytes,6,opt,name=options,proto3" json:"options,omitempty"`
	// Types that are assignable to AuthenticationMethod:
	//	*ContainerResponse_UserPassword
	//	*ContainerResponse_AuthenticationKey
	AuthenticationMethod isContainerResponse_AuthenticationMethod `protobuf_oneof:"authenticationMethod"`
	DeletionTime         int64                                    `protobuf:"varint,9,opt,name=deletionTime,proto3" json:"deletionTime,omitempty"`
}

func (x *ContainerResponse) Reset() {
	*x = ContainerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_containerService_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContainerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContainerResponse) ProtoMessage() {}

func (x *ContainerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_containerService_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContainerResponse.ProtoReflect.Descriptor instead.
func (*ContainerResponse) Descriptor() ([]byte, []int) {
	return file_containerService_proto_rawDescGZIP(), []int{17}
}

func (x *ContainerResponse) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *ContainerResponse) GetCourseID() string {
	if x != nil {
		return x.CourseID
	}
	return ""
}

func (x *ContainerResponse) GetImageID() string {
	if x != nil {
		return x.ImageID
	}
	return ""
}

func (x *ContainerResponse) GetPorts() []*ResponsePort {
	if x != nil {
		return x.Ports
	}
	return nil
}

func (x *ContainerResponse) GetIpAddress() string {
	if x != nil {
		return x.IpAddress
	}
	return ""
}

func (x *ContainerResponse) GetOptions() *ContainerRequestOptions {
	if x != nil {
		return x.Options
	}
	return nil
}

func (m *ContainerResponse) GetAuthenticationMethod() isContainerResponse_AuthenticationMethod {
	if m != nil {
		return m.AuthenticationMethod
	}
	return nil
}

func (x *ContainerResponse) GetUserPassword() *UserPasswordMethod {
	if x, ok := x.GetAuthenticationMethod().(*ContainerResponse_UserPassword); ok {
		return x.UserPassword
	}
	return nil
}

func (x *ContainerResponse) GetAuthenticationKey() *AuthenticationKeyMethod {
	if x, ok := x.GetAuthenticationMethod().(*ContainerResponse_AuthenticationKey); ok {
		return x.AuthenticationKey
	}
	return nil
}

func (x *ContainerResponse) GetDeletionTime() int64 {
	if x != nil {
		return x.DeletionTime
	}
	return 0
}

type isContainerResponse_AuthenticationMethod interface {
	isContainerResponse_AuthenticationMethod()
}

type ContainerResponse_UserPassword struct {
	UserPassword *UserPasswordMethod `protobuf:"bytes,7,opt,name=userPassword,proto3,oneof"`
}

type ContainerResponse_AuthenticationKey struct {
	AuthenticationKey *AuthenticationKeyMethod `protobuf:"bytes,8,opt,name=authenticationKey,proto3,oneof"`
}

func (*ContainerResponse_UserPassword) isContainerResponse_AuthenticationMethod() {}

func (*ContainerResponse_AuthenticationKey) isContainerResponse_AuthenticationMethod() {}

type AdminContainerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CourseID      string       `protobuf:"bytes,1,opt,name=courseID,proto3" json:"courseID,omitempty"`
	UserName      string       `protobuf:"bytes,2,opt,name=userName,proto3" json:"userName,omitempty"`
	ForceRecreate bool         `protobuf:"varint,3,opt,name=forceRecreate,proto3" json:"forceRecreate,omitempty"`
	CourseName    string       `protobuf:"bytes,4,opt,name=courseName,proto3" json:"courseName,omitempty"`
	Port          *RequestPort `protobuf:"bytes,5,opt,name=port,proto3" json:"port,omitempty"`
}

func (x *AdminContainerRequest) Reset() {
	*x = AdminContainerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_containerService_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminContainerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminContainerRequest) ProtoMessage() {}

func (x *AdminContainerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_containerService_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminContainerRequest.ProtoReflect.Descriptor instead.
func (*AdminContainerRequest) Descriptor() ([]byte, []int) {
	return file_containerService_proto_rawDescGZIP(), []int{18}
}

func (x *AdminContainerRequest) GetCourseID() string {
	if x != nil {
		return x.CourseID
	}
	return ""
}

func (x *AdminContainerRequest) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *AdminContainerRequest) GetForceRecreate() bool {
	if x != nil {
		return x.ForceRecreate
	}
	return false
}

func (x *AdminContainerRequest) GetCourseName() string {
	if x != nil {
		return x.CourseName
	}
	return ""
}

func (x *AdminContainerRequest) GetPort() *RequestPort {
	if x != nil {
		return x.Port
	}
	return nil
}

type AdminContainerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CourseID      string              `protobuf:"bytes,1,opt,name=courseID,proto3" json:"courseID,omitempty"`
	UserName      string              `protobuf:"bytes,2,opt,name=userName,proto3" json:"userName,omitempty"`
	ForceRecreate bool                `protobuf:"varint,3,opt,name=forceRecreate,proto3" json:"forceRecreate,omitempty"`
	CourseName    string              `protobuf:"bytes,4,opt,name=courseName,proto3" json:"courseName,omitempty"`
	Port          *ResponsePort       `protobuf:"bytes,5,opt,name=port,proto3" json:"port,omitempty"`
	IpAddress     string              `protobuf:"bytes,6,opt,name=ipAddress,proto3" json:"ipAddress,omitempty"`
	UserPassword  *UserPasswordMethod `protobuf:"bytes,7,opt,name=userPassword,proto3" json:"userPassword,omitempty"`
}

func (x *AdminContainerResponse) Reset() {
	*x = AdminContainerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_containerService_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminContainerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminContainerResponse) ProtoMessage() {}

func (x *AdminContainerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_containerService_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminContainerResponse.ProtoReflect.Descriptor instead.
func (*AdminContainerResponse) Descriptor() ([]byte, []int) {
	return file_containerService_proto_rawDescGZIP(), []int{19}
}

func (x *AdminContainerResponse) GetCourseID() string {
	if x != nil {
		return x.CourseID
	}
	return ""
}

func (x *AdminContainerResponse) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *AdminContainerResponse) GetForceRecreate() bool {
	if x != nil {
		return x.ForceRecreate
	}
	return false
}

func (x *AdminContainerResponse) GetCourseName() string {
	if x != nil {
		return x.CourseName
	}
	return ""
}

func (x *AdminContainerResponse) GetPort() *ResponsePort {
	if x != nil {
		return x.Port
	}
	return nil
}

func (x *AdminContainerResponse) GetIpAddress() string {
	if x != nil {
		return x.IpAddress
	}
	return ""
}

func (x *AdminContainerResponse) GetUserPassword() *UserPasswordMethod {
	if x != nil {
		return x.UserPassword
	}
	return nil
}

type SaveDataRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID      string    `protobuf:"bytes,1,opt,name=userID,proto3" json:"userID,omitempty"`
	CourseID    string    `protobuf:"bytes,2,opt,name=courseID,proto3" json:"courseID,omitempty"`
	Metadata    *Metadata `protobuf:"bytes,3,opt,name=metadata,proto3" json:"metadata,omitempty"`
	WorkdirSize uint32    `protobuf:"varint,4,opt,name=workdirSize,proto3" json:"workdirSize,omitempty"`
	UserEmail   string    `protobuf:"bytes,5,opt,name=userEmail,proto3" json:"userEmail,omitempty"`
}

func (x *SaveDataRequest) Reset() {
	*x = SaveDataRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_containerService_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SaveDataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveDataRequest) ProtoMessage() {}

func (x *SaveDataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_containerService_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveDataRequest.ProtoReflect.Descriptor instead.
func (*SaveDataRequest) Descriptor() ([]byte, []int) {
	return file_containerService_proto_rawDescGZIP(), []int{20}
}

func (x *SaveDataRequest) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *SaveDataRequest) GetCourseID() string {
	if x != nil {
		return x.CourseID
	}
	return ""
}

func (x *SaveDataRequest) GetMetadata() *Metadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *SaveDataRequest) GetWorkdirSize() uint32 {
	if x != nil {
		return x.WorkdirSize
	}
	return 0
}

func (x *SaveDataRequest) GetUserEmail() string {
	if x != nil {
		return x.UserEmail
	}
	return ""
}

type SaveDataResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID   string `protobuf:"bytes,1,opt,name=userID,proto3" json:"userID,omitempty"`
	CourseID string `protobuf:"bytes,2,opt,name=courseID,proto3" json:"courseID,omitempty"`
	Error    string `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *SaveDataResponse) Reset() {
	*x = SaveDataResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_containerService_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SaveDataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveDataResponse) ProtoMessage() {}

func (x *SaveDataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_containerService_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveDataResponse.ProtoReflect.Descriptor instead.
func (*SaveDataResponse) Descriptor() ([]byte, []int) {
	return file_containerService_proto_rawDescGZIP(), []int{21}
}

func (x *SaveDataResponse) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *SaveDataResponse) GetCourseID() string {
	if x != nil {
		return x.CourseID
	}
	return ""
}

func (x *SaveDataResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type ShutdownContainerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID   string `protobuf:"bytes,1,opt,name=userID,proto3" json:"userID,omitempty"`
	CourseID string `protobuf:"bytes,2,opt,name=courseID,proto3" json:"courseID,omitempty"`
}

func (x *ShutdownContainerRequest) Reset() {
	*x = ShutdownContainerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_containerService_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShutdownContainerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShutdownContainerRequest) ProtoMessage() {}

func (x *ShutdownContainerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_containerService_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShutdownContainerRequest.ProtoReflect.Descriptor instead.
func (*ShutdownContainerRequest) Descriptor() ([]byte, []int) {
	return file_containerService_proto_rawDescGZIP(), []int{22}
}

func (x *ShutdownContainerRequest) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *ShutdownContainerRequest) GetCourseID() string {
	if x != nil {
		return x.CourseID
	}
	return ""
}

type ShutdownContainerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID   string `protobuf:"bytes,1,opt,name=userID,proto3" json:"userID,omitempty"`
	CourseID string `protobuf:"bytes,2,opt,name=courseID,proto3" json:"courseID,omitempty"`
	Error    string `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *ShutdownContainerResponse) Reset() {
	*x = ShutdownContainerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_containerService_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShutdownContainerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShutdownContainerResponse) ProtoMessage() {}

func (x *ShutdownContainerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_containerService_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShutdownContainerResponse.ProtoReflect.Descriptor instead.
func (*ShutdownContainerResponse) Descriptor() ([]byte, []int) {
	return file_containerService_proto_rawDescGZIP(), []int{23}
}

func (x *ShutdownContainerResponse) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *ShutdownContainerResponse) GetCourseID() string {
	if x != nil {
		return x.CourseID
	}
	return ""
}

func (x *ShutdownContainerResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type DockerImageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name          string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	BuildId       string `protobuf:"bytes,2,opt,name=buildId,proto3" json:"buildId,omitempty"`
	ContextZip    []byte `protobuf:"bytes,3,opt,name=contextZip,proto3" json:"contextZip,omitempty"`
	Dockerfile    string `protobuf:"bytes,4,opt,name=dockerfile,proto3" json:"dockerfile,omitempty"`
	WrapperScript string `protobuf:"bytes,5,opt,name=wrapperScript,proto3" json:"wrapperScript,omitempty"`
}

func (x *DockerImageRequest) Reset() {
	*x = DockerImageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_containerService_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DockerImageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DockerImageRequest) ProtoMessage() {}

func (x *DockerImageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_containerService_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DockerImageRequest.ProtoReflect.Descriptor instead.
func (*DockerImageRequest) Descriptor() ([]byte, []int) {
	return file_containerService_proto_rawDescGZIP(), []int{24}
}

func (x *DockerImageRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DockerImageRequest) GetBuildId() string {
	if x != nil {
		return x.BuildId
	}
	return ""
}

func (x *DockerImageRequest) GetContextZip() []byte {
	if x != nil {
		return x.ContextZip
	}
	return nil
}

func (x *DockerImageRequest) GetDockerfile() string {
	if x != nil {
		return x.Dockerfile
	}
	return ""
}

func (x *DockerImageRequest) GetWrapperScript() string {
	if x != nil {
		return x.WrapperScript
	}
	return ""
}

type DockerImageResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name    string                     `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	BuildId string                     `protobuf:"bytes,2,opt,name=buildId,proto3" json:"buildId,omitempty"`
	Error   string                     `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
	Status  DockerImageResponse_Status `protobuf:"varint,4,opt,name=status,proto3,enum=fr.centralesupelec.gRPC.DockerImageResponse_Status" json:"status,omitempty"`
	Logs    string                     `protobuf:"bytes,5,opt,name=logs,proto3" json:"logs,omitempty"`
}

func (x *DockerImageResponse) Reset() {
	*x = DockerImageResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_containerService_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DockerImageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DockerImageResponse) ProtoMessage() {}

func (x *DockerImageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_containerService_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DockerImageResponse.ProtoReflect.Descriptor instead.
func (*DockerImageResponse) Descriptor() ([]byte, []int) {
	return file_containerService_proto_rawDescGZIP(), []int{25}
}

func (x *DockerImageResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DockerImageResponse) GetBuildId() string {
	if x != nil {
		return x.BuildId
	}
	return ""
}

func (x *DockerImageResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *DockerImageResponse) GetStatus() DockerImageResponse_Status {
	if x != nil {
		return x.Status
	}
	return DockerImageResponse_BUILDING
}

func (x *DockerImageResponse) GetLogs() string {
	if x != nil {
		return x.Logs
	}
	return ""
}

type Worker struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Region  string `protobuf:"bytes,1,opt,name=region,proto3" json:"region,omitempty"`
	Flavor  string `protobuf:"bytes,2,opt,name=flavor,proto3" json:"flavor,omitempty"`
	ImageId string `protobuf:"bytes,3,opt,name=imageId,proto3" json:"imageId,omitempty"`
	Count   uint32 `protobuf:"varint,4,opt,name=count,proto3" json:"count,omitempty"`
	Owner   string `protobuf:"bytes,5,opt,name=owner,proto3" json:"owner,omitempty"`
}

func (x *Worker) Reset() {
	*x = Worker{}
	if protoimpl.UnsafeEnabled {
		mi := &file_containerService_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Worker) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Worker) ProtoMessage() {}

func (x *Worker) ProtoReflect() protoreflect.Message {
	mi := &file_containerService_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Worker.ProtoReflect.Descriptor instead.
func (*Worker) Descriptor() ([]byte, []int) {
	return file_containerService_proto_rawDescGZIP(), []int{26}
}

func (x *Worker) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *Worker) GetFlavor() string {
	if x != nil {
		return x.Flavor
	}
	return ""
}

func (x *Worker) GetImageId() string {
	if x != nil {
		return x.ImageId
	}
	return ""
}

func (x *Worker) GetCount() uint32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *Worker) GetOwner() string {
	if x != nil {
		return x.Owner
	}
	return ""
}

type DeployRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string    `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Workers   []*Worker `protobuf:"bytes,2,rep,name=workers,proto3" json:"workers,omitempty"`
	CourseIds []string  `protobuf:"bytes,3,rep,name=courseIds,proto3" json:"courseIds,omitempty"`
}

func (x *DeployRequest) Reset() {
	*x = DeployRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_containerService_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeployRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeployRequest) ProtoMessage() {}

func (x *DeployRequest) ProtoReflect() protoreflect.Message {
	mi := &file_containerService_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeployRequest.ProtoReflect.Descriptor instead.
func (*DeployRequest) Descriptor() ([]byte, []int) {
	return file_containerService_proto_rawDescGZIP(), []int{27}
}

func (x *DeployRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DeployRequest) GetWorkers() []*Worker {
	if x != nil {
		return x.Workers
	}
	return nil
}

func (x *DeployRequest) GetCourseIds() []string {
	if x != nil {
		return x.CourseIds
	}
	return nil
}

type DeployResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     string                `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Error  string                `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	Status DeployResponse_Status `protobuf:"varint,4,opt,name=status,proto3,enum=fr.centralesupelec.gRPC.DeployResponse_Status" json:"status,omitempty"`
	Logs   string                `protobuf:"bytes,5,opt,name=logs,proto3" json:"logs,omitempty"`
}

func (x *DeployResponse) Reset() {
	*x = DeployResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_containerService_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeployResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeployResponse) ProtoMessage() {}

func (x *DeployResponse) ProtoReflect() protoreflect.Message {
	mi := &file_containerService_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeployResponse.ProtoReflect.Descriptor instead.
func (*DeployResponse) Descriptor() ([]byte, []int) {
	return file_containerService_proto_rawDescGZIP(), []int{28}
}

func (x *DeployResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DeployResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *DeployResponse) GetStatus() DeployResponse_Status {
	if x != nil {
		return x.Status
	}
	return DeployResponse_RUNNING
}

func (x *DeployResponse) GetLogs() string {
	if x != nil {
		return x.Logs
	}
	return ""
}

type DelayDeletionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID   string    `protobuf:"bytes,1,opt,name=userID,proto3" json:"userID,omitempty"`
	CourseID string    `protobuf:"bytes,2,opt,name=courseID,proto3" json:"courseID,omitempty"`
	Metadata *Metadata `protobuf:"bytes,3,opt,name=metadata,proto3" json:"metadata,omitempty"`
}

func (x *DelayDeletionRequest) Reset() {
	*x = DelayDeletionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_containerService_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelayDeletionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelayDeletionRequest) ProtoMessage() {}

func (x *DelayDeletionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_containerService_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelayDeletionRequest.ProtoReflect.Descriptor instead.
func (*DelayDeletionRequest) Descriptor() ([]byte, []int) {
	return file_containerService_proto_rawDescGZIP(), []int{29}
}

func (x *DelayDeletionRequest) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *DelayDeletionRequest) GetCourseID() string {
	if x != nil {
		return x.CourseID
	}
	return ""
}

func (x *DelayDeletionRequest) GetMetadata() *Metadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type DelayDeletionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID       string `protobuf:"bytes,1,opt,name=userID,proto3" json:"userID,omitempty"`
	CourseID     string `protobuf:"bytes,2,opt,name=courseID,proto3" json:"courseID,omitempty"`
	DeletionTime int64  `protobuf:"varint,3,opt,name=deletionTime,proto3" json:"deletionTime,omitempty"`
}

func (x *DelayDeletionResponse) Reset() {
	*x = DelayDeletionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_containerService_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelayDeletionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelayDeletionResponse) ProtoMessage() {}

func (x *DelayDeletionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_containerService_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelayDeletionResponse.ProtoReflect.Descriptor instead.
func (*DelayDeletionResponse) Descriptor() ([]byte, []int) {
	return file_containerService_proto_rawDescGZIP(), []int{30}
}

func (x *DelayDeletionResponse) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *DelayDeletionResponse) GetCourseID() string {
	if x != nil {
		return x.CourseID
	}
	return ""
}

func (x *DelayDeletionResponse) GetDeletionTime() int64 {
	if x != nil {
		return x.DeletionTime
	}
	return 0
}

type ContainerRequestOptions_AuthenticationKeyOption struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GenerateKey bool   `protobuf:"varint,1,opt,name=generateKey,proto3" json:"generateKey,omitempty"`
	PublicKey   string `protobuf:"bytes,2,opt,name=publicKey,proto3" json:"publicKey,omitempty"`
}

func (x *ContainerRequestOptions_AuthenticationKeyOption) Reset() {
	*x = ContainerRequestOptions_AuthenticationKeyOption{}
	if protoimpl.UnsafeEnabled {
		mi := &file_containerService_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContainerRequestOptions_AuthenticationKeyOption) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContainerRequestOptions_AuthenticationKeyOption) ProtoMessage() {}

func (x *ContainerRequestOptions_AuthenticationKeyOption) ProtoReflect() protoreflect.Message {
	mi := &file_containerService_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContainerRequestOptions_AuthenticationKeyOption.ProtoReflect.Descriptor instead.
func (*ContainerRequestOptions_AuthenticationKeyOption) Descriptor() ([]byte, []int) {
	return file_containerService_proto_rawDescGZIP(), []int{15, 0}
}

func (x *ContainerRequestOptions_AuthenticationKeyOption) GetGenerateKey() bool {
	if x != nil {
		return x.GenerateKey
	}
	return false
}

func (x *ContainerRequestOptions_AuthenticationKeyOption) GetPublicKey() string {
	if x != nil {
		return x.PublicKey
	}
	return ""
}

var File_containerService_proto protoreflect.FileDescriptor

var file_containerService_proto_rawDesc = []byte{
	0x0a, 0x16, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x17, 0x66, 0x72, 0x2e, 0x63, 0x65, 0x6e,
	0x74, 0x72, 0x61, 0x6c, 0x65, 0x73, 0x75, 0x70, 0x65, 0x6c, 0x65, 0x63, 0x2e, 0x67, 0x52, 0x50,
	0x43, 0x22, 0x43, 0x0a, 0x0d, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x50, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6f,
	0x75, 0x72, 0x73, 0x65, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6f,
	0x75, 0x72, 0x73, 0x65, 0x49, 0x44, 0x22, 0x2e, 0x0a, 0x0e, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x50,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x49, 0x50, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x49, 0x50, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0xd9, 0x01, 0x0a, 0x16, 0x49, 0x6e, 0x69, 0x74, 0x41,
	0x75, 0x74, 0x6f, 0x73, 0x63, 0x61, 0x6c, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x53, 0x0a, 0x06, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x3b, 0x2e, 0x66, 0x72, 0x2e, 0x63, 0x65, 0x6e, 0x74, 0x72, 0x61, 0x6c, 0x65, 0x73,
	0x75, 0x70, 0x65, 0x6c, 0x65, 0x63, 0x2e, 0x67, 0x52, 0x50, 0x43, 0x2e, 0x49, 0x6e, 0x69, 0x74,
	0x41, 0x75, 0x74, 0x6f, 0x73, 0x63, 0x61, 0x6c, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x2e, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06,
	0x6f, 0x77, 0x6e, 0x65, 0x72, 0x73, 0x1a, 0x6a, 0x0a, 0x0b, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x45, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x66, 0x72, 0x2e, 0x63, 0x65, 0x6e, 0x74,
	0x72, 0x61, 0x6c, 0x65, 0x73, 0x75, 0x70, 0x65, 0x6c, 0x65, 0x63, 0x2e, 0x67, 0x52, 0x50, 0x43,
	0x2e, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x41, 0x75, 0x74, 0x6f, 0x73, 0x63, 0x61, 0x6c, 0x69, 0x6e,
	0x67, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x22, 0xfe, 0x01, 0x0a, 0x16, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x41, 0x75, 0x74, 0x6f,
	0x73, 0x63, 0x61, 0x6c, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x22, 0x0a,
	0x0c, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x2c, 0x0a, 0x11, 0x6d, 0x69, 0x6e, 0x49, 0x64, 0x6c, 0x65, 0x4e, 0x6f, 0x64, 0x65,
	0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x6d, 0x69,
	0x6e, 0x49, 0x64, 0x6c, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x24, 0x0a, 0x0d, 0x6d, 0x61, 0x78, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x6d, 0x61, 0x78, 0x4e, 0x6f, 0x64, 0x65, 0x73,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2a, 0x0a, 0x10, 0x6d, 0x61, 0x6e, 0x75, 0x61, 0x6c, 0x4e,
	0x6f, 0x64, 0x65, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x10, 0x6d, 0x61, 0x6e, 0x75, 0x61, 0x6c, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x40, 0x0a, 0x07, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x07, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x26, 0x2e, 0x66, 0x72, 0x2e, 0x63, 0x65, 0x6e, 0x74, 0x72, 0x61, 0x6c, 0x65,
	0x73, 0x75, 0x70, 0x65, 0x6c, 0x65, 0x63, 0x2e, 0x67, 0x52, 0x50, 0x43, 0x2e, 0x53, 0x63, 0x61,
	0x6c, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x72, 0x65, 0x67, 0x69,
	0x6f, 0x6e, 0x73, 0x22, 0x41, 0x0a, 0x0d, 0x53, 0x63, 0x61, 0x6c, 0x69, 0x6e, 0x67, 0x52, 0x65,
	0x67, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x16,
	0x0a, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x22, 0x2f, 0x0a, 0x17, 0x49, 0x6e, 0x69, 0x74, 0x41, 0x75,
	0x74, 0x6f, 0x73, 0x63, 0x61, 0x6c, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x40, 0x0a, 0x0a, 0x4c, 0x6f, 0x67, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1a, 0x0a,
	0x08, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x49, 0x44, 0x22, 0x21, 0x0a, 0x0b, 0x4c, 0x6f, 0x67,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x6f, 0x67, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x6f, 0x67, 0x73, 0x22, 0x4c, 0x0a, 0x12,
	0x55, 0x73, 0x65, 0x72, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x4d, 0x65, 0x74, 0x68,
	0x6f, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x22, 0x3d, 0x0a, 0x17, 0x41, 0x75,
	0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x4d,
	0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74,
	0x65, 0x64, 0x4b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x67, 0x65, 0x6e,
	0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x4b, 0x65, 0x79, 0x22, 0x4d, 0x0a, 0x0d, 0x52, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x61,
	0x6e, 0x6f, 0x43, 0x50, 0x55, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6e, 0x61,
	0x6e, 0x6f, 0x43, 0x50, 0x55, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79,
	0x42, 0x79, 0x74, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x6d, 0x65, 0x6d,
	0x6f, 0x72, 0x79, 0x42, 0x79, 0x74, 0x65, 0x73, 0x22, 0x84, 0x01, 0x0a, 0x08, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x3f, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x66, 0x72, 0x2e, 0x63, 0x65, 0x6e, 0x74, 0x72, 0x61, 0x6c,
	0x65, 0x73, 0x75, 0x70, 0x65, 0x6c, 0x65, 0x63, 0x2e, 0x67, 0x52, 0x50, 0x43, 0x2e, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x54, 0x61, 0x67, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x1a, 0x37, 0x0a, 0x09, 0x54, 0x61, 0x67, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22,
	0xb1, 0x01, 0x0a, 0x0b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x6f, 0x72, 0x74, 0x12,
	0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x24, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x78, 0x69, 0x6f, 0x6e, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x78,
	0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x6f, 0x72, 0x74, 0x54,
	0x6f, 0x4d, 0x61, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x70, 0x6f, 0x72, 0x74,
	0x54, 0x6f, 0x4d, 0x61, 0x70, 0x12, 0x3c, 0x0a, 0x19, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65,
	0x64, 0x54, 0x6f, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e,
	0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x19, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72,
	0x65, 0x64, 0x54, 0x6f, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69,
	0x6e, 0x65, 0x72, 0x22, 0xc8, 0x01, 0x0a, 0x0c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x50, 0x6f, 0x72, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x24, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x78,
	0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63,
	0x6f, 0x6e, 0x6e, 0x65, 0x78, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09,
	0x70, 0x6f, 0x72, 0x74, 0x54, 0x6f, 0x4d, 0x61, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x09, 0x70, 0x6f, 0x72, 0x74, 0x54, 0x6f, 0x4d, 0x61, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x61,
	0x70, 0x54, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6d, 0x61, 0x70, 0x54, 0x6f,
	0x12, 0x3c, 0x0a, 0x19, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x54, 0x6f, 0x41, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x19, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x54, 0x6f, 0x41,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x22, 0x2f,
	0x0a, 0x05, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22,
	0xdc, 0x06, 0x0a, 0x17, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x66,
	0x6f, 0x72, 0x63, 0x65, 0x52, 0x65, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0d, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x52, 0x65, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x12, 0x76, 0x0a, 0x11, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x48, 0x2e, 0x66,
	0x72, 0x2e, 0x63, 0x65, 0x6e, 0x74, 0x72, 0x61, 0x6c, 0x65, 0x73, 0x75, 0x70, 0x65, 0x6c, 0x65,
	0x63, 0x2e, 0x67, 0x52, 0x50, 0x43, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x41,
	0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79,
	0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x11, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x12, 0x28, 0x0a, 0x0f, 0x73, 0x61, 0x76,
	0x65, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0f, 0x73, 0x61, 0x76, 0x65, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x57,
	0x6f, 0x72, 0x6b, 0x12, 0x20, 0x0a, 0x0b, 0x77, 0x6f, 0x72, 0x6b, 0x64, 0x69, 0x72, 0x53, 0x69,
	0x7a, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x77, 0x6f, 0x72, 0x6b, 0x64, 0x69,
	0x72, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x77, 0x6f, 0x72, 0x6b, 0x64, 0x69, 0x72,
	0x50, 0x61, 0x74, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x77, 0x6f, 0x72, 0x6b,
	0x64, 0x69, 0x72, 0x50, 0x61, 0x74, 0x68, 0x12, 0x3c, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x66, 0x72, 0x2e, 0x63, 0x65, 0x6e, 0x74,
	0x72, 0x61, 0x6c, 0x65, 0x73, 0x75, 0x70, 0x65, 0x6c, 0x65, 0x63, 0x2e, 0x67, 0x52, 0x50, 0x43,
	0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x52, 0x05,
	0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x4f, 0x0a, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x50, 0x61, 0x73,
	0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x66, 0x72,
	0x2e, 0x63, 0x65, 0x6e, 0x74, 0x72, 0x61, 0x6c, 0x65, 0x73, 0x75, 0x70, 0x65, 0x6c, 0x65, 0x63,
	0x2e, 0x67, 0x52, 0x50, 0x43, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f,
	0x72, 0x64, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x52, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x50, 0x61,
	0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x72, 0x0a, 0x10, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x69,
	0x63, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x46, 0x2e, 0x66, 0x72, 0x2e, 0x63, 0x65, 0x6e, 0x74, 0x72, 0x61, 0x6c, 0x65, 0x73, 0x75,
	0x70, 0x65, 0x6c, 0x65, 0x63, 0x2e, 0x67, 0x52, 0x50, 0x43, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61,
	0x69, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x69, 0x63, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x10, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x69,
	0x63, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x12, 0x48, 0x0a, 0x0f, 0x66, 0x6f,
	0x72, 0x62, 0x69, 0x64, 0x64, 0x65, 0x6e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x09, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x66, 0x72, 0x2e, 0x63, 0x65, 0x6e, 0x74, 0x72, 0x61, 0x6c,
	0x65, 0x73, 0x75, 0x70, 0x65, 0x6c, 0x65, 0x63, 0x2e, 0x67, 0x52, 0x50, 0x43, 0x2e, 0x4c, 0x61,
	0x62, 0x65, 0x6c, 0x52, 0x0f, 0x66, 0x6f, 0x72, 0x62, 0x69, 0x64, 0x64, 0x65, 0x6e, 0x4c, 0x61,
	0x62, 0x65, 0x6c, 0x73, 0x12, 0x48, 0x0a, 0x0f, 0x6d, 0x61, 0x6e, 0x64, 0x61, 0x74, 0x6f, 0x72,
	0x79, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e,
	0x66, 0x72, 0x2e, 0x63, 0x65, 0x6e, 0x74, 0x72, 0x61, 0x6c, 0x65, 0x73, 0x75, 0x70, 0x65, 0x6c,
	0x65, 0x63, 0x2e, 0x67, 0x52, 0x50, 0x43, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x52, 0x0f, 0x6d,
	0x61, 0x6e, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x79, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x1a, 0x59,
	0x0a, 0x17, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x4b, 0x65, 0x79, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x67, 0x65, 0x6e,
	0x65, 0x72, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b,
	0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x70,
	0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x1a, 0x43, 0x0a, 0x15, 0x47, 0x65, 0x6e,
	0x65, 0x72, 0x69, 0x63, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xa7,
	0x02, 0x0a, 0x10, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x63,
	0x6f, 0x75, 0x72, 0x73, 0x65, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63,
	0x6f, 0x75, 0x72, 0x73, 0x65, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x69, 0x6d, 0x61, 0x67, 0x65,
	0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x49,
	0x44, 0x12, 0x3d, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x66, 0x72, 0x2e, 0x63, 0x65, 0x6e, 0x74, 0x72, 0x61, 0x6c,
	0x65, 0x73, 0x75, 0x70, 0x65, 0x6c, 0x65, 0x63, 0x2e, 0x67, 0x52, 0x50, 0x43, 0x2e, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x12, 0x4a, 0x0a, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x30, 0x2e, 0x66, 0x72, 0x2e, 0x63, 0x65, 0x6e, 0x74, 0x72, 0x61, 0x6c, 0x65, 0x73,
	0x75, 0x70, 0x65, 0x6c, 0x65, 0x63, 0x2e, 0x67, 0x52, 0x50, 0x43, 0x2e, 0x43, 0x6f, 0x6e, 0x74,
	0x61, 0x69, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x52, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x3a, 0x0a, 0x05,
	0x70, 0x6f, 0x72, 0x74, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x66, 0x72,
	0x2e, 0x63, 0x65, 0x6e, 0x74, 0x72, 0x61, 0x6c, 0x65, 0x73, 0x75, 0x70, 0x65, 0x6c, 0x65, 0x63,
	0x2e, 0x67, 0x52, 0x50, 0x43, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x6f, 0x72,
	0x74, 0x52, 0x05, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x22, 0xf9, 0x03, 0x0a, 0x11, 0x43, 0x6f, 0x6e,
	0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65,
	0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65,
	0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x49, 0x44, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x49, 0x44, 0x12, 0x3b, 0x0a, 0x05,
	0x70, 0x6f, 0x72, 0x74, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x66, 0x72,
	0x2e, 0x63, 0x65, 0x6e, 0x74, 0x72, 0x61, 0x6c, 0x65, 0x73, 0x75, 0x70, 0x65, 0x6c, 0x65, 0x63,
	0x2e, 0x67, 0x52, 0x50, 0x43, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x6f,
	0x72, 0x74, 0x52, 0x05, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x70, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x70,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x4a, 0x0a, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x66, 0x72, 0x2e, 0x63, 0x65,
	0x6e, 0x74, 0x72, 0x61, 0x6c, 0x65, 0x73, 0x75, 0x70, 0x65, 0x6c, 0x65, 0x63, 0x2e, 0x67, 0x52,
	0x50, 0x43, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x07, 0x6f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x12, 0x51, 0x0a, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x50, 0x61, 0x73, 0x73, 0x77,
	0x6f, 0x72, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x66, 0x72, 0x2e, 0x63,
	0x65, 0x6e, 0x74, 0x72, 0x61, 0x6c, 0x65, 0x73, 0x75, 0x70, 0x65, 0x6c, 0x65, 0x63, 0x2e, 0x67,
	0x52, 0x50, 0x43, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64,
	0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x48, 0x00, 0x52, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x50, 0x61,
	0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x60, 0x0a, 0x11, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e,
	0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x30, 0x2e, 0x66, 0x72, 0x2e, 0x63, 0x65, 0x6e, 0x74, 0x72, 0x61, 0x6c, 0x65, 0x73,
	0x75, 0x70, 0x65, 0x6c, 0x65, 0x63, 0x2e, 0x67, 0x52, 0x50, 0x43, 0x2e, 0x41, 0x75, 0x74, 0x68,
	0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x4d, 0x65, 0x74,
	0x68, 0x6f, 0x64, 0x48, 0x00, 0x52, 0x11, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x12, 0x22, 0x0a, 0x0c, 0x64, 0x65, 0x6c, 0x65,
	0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c,
	0x64, 0x65, 0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x42, 0x16, 0x0a, 0x14,
	0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65,
	0x74, 0x68, 0x6f, 0x64, 0x22, 0xcf, 0x01, 0x0a, 0x15, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x43, 0x6f,
	0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a,
	0x0a, 0x08, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73,
	0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73,
	0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x52,
	0x65, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x66,
	0x6f, 0x72, 0x63, 0x65, 0x52, 0x65, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x1e, 0x0a, 0x0a,
	0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x38, 0x0a, 0x04,
	0x70, 0x6f, 0x72, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x66, 0x72, 0x2e,
	0x63, 0x65, 0x6e, 0x74, 0x72, 0x61, 0x6c, 0x65, 0x73, 0x75, 0x70, 0x65, 0x6c, 0x65, 0x63, 0x2e,
	0x67, 0x52, 0x50, 0x43, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x6f, 0x72, 0x74,
	0x52, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x22, 0xc0, 0x02, 0x0a, 0x16, 0x41, 0x64, 0x6d, 0x69, 0x6e,
	0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x49, 0x44, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x49, 0x44, 0x12, 0x1a, 0x0a,
	0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x66, 0x6f, 0x72,
	0x63, 0x65, 0x52, 0x65, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0d, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x52, 0x65, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12,
	0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x39, 0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e,
	0x66, 0x72, 0x2e, 0x63, 0x65, 0x6e, 0x74, 0x72, 0x61, 0x6c, 0x65, 0x73, 0x75, 0x70, 0x65, 0x6c,
	0x65, 0x63, 0x2e, 0x67, 0x52, 0x50, 0x43, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x50, 0x6f, 0x72, 0x74, 0x52, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x70,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69,
	0x70, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x4f, 0x0a, 0x0c, 0x75, 0x73, 0x65, 0x72,
	0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b,
	0x2e, 0x66, 0x72, 0x2e, 0x63, 0x65, 0x6e, 0x74, 0x72, 0x61, 0x6c, 0x65, 0x73, 0x75, 0x70, 0x65,
	0x6c, 0x65, 0x63, 0x2e, 0x67, 0x52, 0x50, 0x43, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x50, 0x61, 0x73,
	0x73, 0x77, 0x6f, 0x72, 0x64, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x52, 0x0c, 0x75, 0x73, 0x65,
	0x72, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x22, 0xc4, 0x01, 0x0a, 0x0f, 0x53, 0x61,
	0x76, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x49,
	0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x49,
	0x44, 0x12, 0x3d, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x66, 0x72, 0x2e, 0x63, 0x65, 0x6e, 0x74, 0x72, 0x61, 0x6c,
	0x65, 0x73, 0x75, 0x70, 0x65, 0x6c, 0x65, 0x63, 0x2e, 0x67, 0x52, 0x50, 0x43, 0x2e, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x12, 0x20, 0x0a, 0x0b, 0x77, 0x6f, 0x72, 0x6b, 0x64, 0x69, 0x72, 0x53, 0x69, 0x7a, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x77, 0x6f, 0x72, 0x6b, 0x64, 0x69, 0x72, 0x53, 0x69,
	0x7a, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x73, 0x65, 0x72, 0x45, 0x6d, 0x61, 0x69, 0x6c,
	0x22, 0x5c, 0x0a, 0x10, 0x53, 0x61, 0x76, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08,
	0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x4e,
	0x0a, 0x18, 0x53, 0x68, 0x75, 0x74, 0x64, 0x6f, 0x77, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69,
	0x6e, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x49, 0x44, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x49, 0x44, 0x22, 0x65,
	0x0a, 0x19, 0x53, 0x68, 0x75, 0x74, 0x64, 0x6f, 0x77, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69,
	0x6e, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x49, 0x44, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x49, 0x44, 0x12,
	0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0xa8, 0x01, 0x0a, 0x12, 0x44, 0x6f, 0x63, 0x6b, 0x65, 0x72,
	0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x78, 0x74, 0x5a, 0x69, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x5a, 0x69, 0x70, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x6f,
	0x63, 0x6b, 0x65, 0x72, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x64, 0x6f, 0x63, 0x6b, 0x65, 0x72, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x77, 0x72,
	0x61, 0x70, 0x70, 0x65, 0x72, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x22, 0xe7, 0x01, 0x0a, 0x13, 0x44, 0x6f, 0x63, 0x6b, 0x65, 0x72, 0x49, 0x6d, 0x61, 0x67, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x62, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62,
	0x75, 0x69, 0x6c, 0x64, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x4b, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x33, 0x2e, 0x66,
	0x72, 0x2e, 0x63, 0x65, 0x6e, 0x74, 0x72, 0x61, 0x6c, 0x65, 0x73, 0x75, 0x70, 0x65, 0x6c, 0x65,
	0x63, 0x2e, 0x67, 0x52, 0x50, 0x43, 0x2e, 0x44, 0x6f, 0x63, 0x6b, 0x65, 0x72, 0x49, 0x6d, 0x61,
	0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x6f, 0x67,
	0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x6f, 0x67, 0x73, 0x22, 0x2b, 0x0a,
	0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0c, 0x0a, 0x08, 0x42, 0x55, 0x49, 0x4c, 0x44,
	0x49, 0x4e, 0x47, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x44, 0x4f, 0x4e, 0x45, 0x10, 0x01, 0x12,
	0x09, 0x0a, 0x05, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x02, 0x22, 0x7e, 0x0a, 0x06, 0x57, 0x6f,
	0x72, 0x6b, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06,
	0x66, 0x6c, 0x61, 0x76, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66, 0x6c,
	0x61, 0x76, 0x6f, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x49, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x14,
	0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x22, 0x78, 0x0a, 0x0d, 0x44, 0x65,
	0x70, 0x6c, 0x6f, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x39, 0x0a, 0x07, 0x77,
	0x6f, 0x72, 0x6b, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x66,
	0x72, 0x2e, 0x63, 0x65, 0x6e, 0x74, 0x72, 0x61, 0x6c, 0x65, 0x73, 0x75, 0x70, 0x65, 0x6c, 0x65,
	0x63, 0x2e, 0x67, 0x52, 0x50, 0x43, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x52, 0x07, 0x77,
	0x6f, 0x72, 0x6b, 0x65, 0x72, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65,
	0x49, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x75, 0x72, 0x73,
	0x65, 0x49, 0x64, 0x73, 0x22, 0xcb, 0x01, 0x0a, 0x0e, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x46, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2e, 0x2e,
	0x66, 0x72, 0x2e, 0x63, 0x65, 0x6e, 0x74, 0x72, 0x61, 0x6c, 0x65, 0x73, 0x75, 0x70, 0x65, 0x6c,
	0x65, 0x63, 0x2e, 0x67, 0x52, 0x50, 0x43, 0x2e, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x6f, 0x67, 0x73, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x6f, 0x67, 0x73, 0x22, 0x37, 0x0a, 0x06, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x0b, 0x0a, 0x07, 0x52, 0x55, 0x4e, 0x4e, 0x49, 0x4e, 0x47, 0x10, 0x00,
	0x12, 0x08, 0x0a, 0x04, 0x44, 0x4f, 0x4e, 0x45, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x45, 0x52,
	0x52, 0x4f, 0x52, 0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x4b, 0x49, 0x50, 0x50, 0x45, 0x44,
	0x10, 0x03, 0x22, 0x89, 0x01, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x61, 0x79, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x49, 0x44, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x49, 0x44, 0x12,
	0x3d, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x21, 0x2e, 0x66, 0x72, 0x2e, 0x63, 0x65, 0x6e, 0x74, 0x72, 0x61, 0x6c, 0x65, 0x73,
	0x75, 0x70, 0x65, 0x6c, 0x65, 0x63, 0x2e, 0x67, 0x52, 0x50, 0x43, 0x2e, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x22, 0x6f,
	0x0a, 0x15, 0x44, 0x65, 0x6c, 0x61, 0x79, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12,
	0x1a, 0x0a, 0x08, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x49, 0x44, 0x12, 0x22, 0x0a, 0x0c, 0x64,
	0x65, 0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0c, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x32,
	0xcb, 0x08, 0x0a, 0x10, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x12, 0x69, 0x0a, 0x0c, 0x67, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x61,
	0x69, 0x6e, 0x65, 0x72, 0x12, 0x29, 0x2e, 0x66, 0x72, 0x2e, 0x63, 0x65, 0x6e, 0x74, 0x72, 0x61,
	0x6c, 0x65, 0x73, 0x75, 0x70, 0x65, 0x6c, 0x65, 0x63, 0x2e, 0x67, 0x52, 0x50, 0x43, 0x2e, 0x43,
	0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x2a, 0x2e, 0x66, 0x72, 0x2e, 0x63, 0x65, 0x6e, 0x74, 0x72, 0x61, 0x6c, 0x65, 0x73, 0x75, 0x70,
	0x65, 0x6c, 0x65, 0x63, 0x2e, 0x67, 0x52, 0x50, 0x43, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69,
	0x6e, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x28, 0x01, 0x30, 0x01, 0x12,
	0x63, 0x0a, 0x08, 0x73, 0x61, 0x76, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x28, 0x2e, 0x66, 0x72,
	0x2e, 0x63, 0x65, 0x6e, 0x74, 0x72, 0x61, 0x6c, 0x65, 0x73, 0x75, 0x70, 0x65, 0x6c, 0x65, 0x63,
	0x2e, 0x67, 0x52, 0x50, 0x43, 0x2e, 0x53, 0x61, 0x76, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x66, 0x72, 0x2e, 0x63, 0x65, 0x6e, 0x74, 0x72,
	0x61, 0x6c, 0x65, 0x73, 0x75, 0x70, 0x65, 0x6c, 0x65, 0x63, 0x2e, 0x67, 0x52, 0x50, 0x43, 0x2e,
	0x53, 0x61, 0x76, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x28, 0x01, 0x30, 0x01, 0x12, 0x78, 0x0a, 0x11, 0x67, 0x65, 0x74, 0x41, 0x64, 0x6d, 0x69, 0x6e,
	0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x12, 0x2e, 0x2e, 0x66, 0x72, 0x2e, 0x63,
	0x65, 0x6e, 0x74, 0x72, 0x61, 0x6c, 0x65, 0x73, 0x75, 0x70, 0x65, 0x6c, 0x65, 0x63, 0x2e, 0x67,
	0x52, 0x50, 0x43, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x66, 0x72, 0x2e, 0x63,
	0x65, 0x6e, 0x74, 0x72, 0x61, 0x6c, 0x65, 0x73, 0x75, 0x70, 0x65, 0x6c, 0x65, 0x63, 0x2e, 0x67,
	0x52, 0x50, 0x43, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x28, 0x01, 0x30, 0x01, 0x12, 0x71,
	0x0a, 0x10, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x44, 0x6f, 0x63, 0x6b, 0x65, 0x72, 0x49, 0x6d, 0x61,
	0x67, 0x65, 0x12, 0x2b, 0x2e, 0x66, 0x72, 0x2e, 0x63, 0x65, 0x6e, 0x74, 0x72, 0x61, 0x6c, 0x65,
	0x73, 0x75, 0x70, 0x65, 0x6c, 0x65, 0x63, 0x2e, 0x67, 0x52, 0x50, 0x43, 0x2e, 0x44, 0x6f, 0x63,
	0x6b, 0x65, 0x72, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x2c, 0x2e, 0x66, 0x72, 0x2e, 0x63, 0x65, 0x6e, 0x74, 0x72, 0x61, 0x6c, 0x65, 0x73, 0x75, 0x70,
	0x65, 0x6c, 0x65, 0x63, 0x2e, 0x67, 0x52, 0x50, 0x43, 0x2e, 0x44, 0x6f, 0x63, 0x6b, 0x65, 0x72,
	0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x28, 0x01, 0x30,
	0x01, 0x12, 0x60, 0x0a, 0x0b, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x49, 0x6e, 0x66, 0x72, 0x61,
	0x12, 0x26, 0x2e, 0x66, 0x72, 0x2e, 0x63, 0x65, 0x6e, 0x74, 0x72, 0x61, 0x6c, 0x65, 0x73, 0x75,
	0x70, 0x65, 0x6c, 0x65, 0x63, 0x2e, 0x67, 0x52, 0x50, 0x43, 0x2e, 0x44, 0x65, 0x70, 0x6c, 0x6f,
	0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x66, 0x72, 0x2e, 0x63, 0x65,
	0x6e, 0x74, 0x72, 0x61, 0x6c, 0x65, 0x73, 0x75, 0x70, 0x65, 0x6c, 0x65, 0x63, 0x2e, 0x67, 0x52,
	0x50, 0x43, 0x2e, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x30, 0x01, 0x12, 0x54, 0x0a, 0x07, 0x67, 0x65, 0x74, 0x4c, 0x6f, 0x67, 0x73, 0x12, 0x23,
	0x2e, 0x66, 0x72, 0x2e, 0x63, 0x65, 0x6e, 0x74, 0x72, 0x61, 0x6c, 0x65, 0x73, 0x75, 0x70, 0x65,
	0x6c, 0x65, 0x63, 0x2e, 0x67, 0x52, 0x50, 0x43, 0x2e, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x66, 0x72, 0x2e, 0x63, 0x65, 0x6e, 0x74, 0x72, 0x61, 0x6c,
	0x65, 0x73, 0x75, 0x70, 0x65, 0x6c, 0x65, 0x63, 0x2e, 0x67, 0x52, 0x50, 0x43, 0x2e, 0x4c, 0x6f,
	0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x7e, 0x0a, 0x11, 0x73, 0x68, 0x75,
	0x74, 0x64, 0x6f, 0x77, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x12, 0x31,
	0x2e, 0x66, 0x72, 0x2e, 0x63, 0x65, 0x6e, 0x74, 0x72, 0x61, 0x6c, 0x65, 0x73, 0x75, 0x70, 0x65,
	0x6c, 0x65, 0x63, 0x2e, 0x67, 0x52, 0x50, 0x43, 0x2e, 0x53, 0x68, 0x75, 0x74, 0x64, 0x6f, 0x77,
	0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x32, 0x2e, 0x66, 0x72, 0x2e, 0x63, 0x65, 0x6e, 0x74, 0x72, 0x61, 0x6c, 0x65, 0x73,
	0x75, 0x70, 0x65, 0x6c, 0x65, 0x63, 0x2e, 0x67, 0x52, 0x50, 0x43, 0x2e, 0x53, 0x68, 0x75, 0x74,
	0x64, 0x6f, 0x77, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x28, 0x01, 0x30, 0x01, 0x12, 0x6e, 0x0a, 0x0d, 0x64, 0x65, 0x6c,
	0x61, 0x79, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2d, 0x2e, 0x66, 0x72, 0x2e,
	0x63, 0x65, 0x6e, 0x74, 0x72, 0x61, 0x6c, 0x65, 0x73, 0x75, 0x70, 0x65, 0x6c, 0x65, 0x63, 0x2e,
	0x67, 0x52, 0x50, 0x43, 0x2e, 0x44, 0x65, 0x6c, 0x61, 0x79, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x66, 0x72, 0x2e, 0x63,
	0x65, 0x6e, 0x74, 0x72, 0x61, 0x6c, 0x65, 0x73, 0x75, 0x70, 0x65, 0x6c, 0x65, 0x63, 0x2e, 0x67,
	0x52, 0x50, 0x43, 0x2e, 0x44, 0x65, 0x6c, 0x61, 0x79, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x74, 0x0a, 0x0f, 0x69, 0x6e, 0x69,
	0x74, 0x41, 0x75, 0x74, 0x6f, 0x73, 0x63, 0x61, 0x6c, 0x69, 0x6e, 0x67, 0x12, 0x2f, 0x2e, 0x66,
	0x72, 0x2e, 0x63, 0x65, 0x6e, 0x74, 0x72, 0x61, 0x6c, 0x65, 0x73, 0x75, 0x70, 0x65, 0x6c, 0x65,
	0x63, 0x2e, 0x67, 0x52, 0x50, 0x43, 0x2e, 0x49, 0x6e, 0x69, 0x74, 0x41, 0x75, 0x74, 0x6f, 0x73,
	0x63, 0x61, 0x6c, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e,
	0x66, 0x72, 0x2e, 0x63, 0x65, 0x6e, 0x74, 0x72, 0x61, 0x6c, 0x65, 0x73, 0x75, 0x70, 0x65, 0x6c,
	0x65, 0x63, 0x2e, 0x67, 0x52, 0x50, 0x43, 0x2e, 0x49, 0x6e, 0x69, 0x74, 0x41, 0x75, 0x74, 0x6f,
	0x73, 0x63, 0x61, 0x6c, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x5c, 0x0a, 0x09, 0x67, 0x65, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x50, 0x12, 0x26, 0x2e, 0x66,
	0x72, 0x2e, 0x63, 0x65, 0x6e, 0x74, 0x72, 0x61, 0x6c, 0x65, 0x73, 0x75, 0x70, 0x65, 0x6c, 0x65,
	0x63, 0x2e, 0x67, 0x52, 0x50, 0x43, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x50, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x66, 0x72, 0x2e, 0x63, 0x65, 0x6e, 0x74, 0x72, 0x61,
	0x6c, 0x65, 0x73, 0x75, 0x70, 0x65, 0x6c, 0x65, 0x63, 0x2e, 0x67, 0x52, 0x50, 0x43, 0x2e, 0x4e,
	0x6f, 0x64, 0x65, 0x49, 0x50, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x0e, 0x50,
	0x01, 0x5a, 0x0a, 0x2e, 0x3b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_containerService_proto_rawDescOnce sync.Once
	file_containerService_proto_rawDescData = file_containerService_proto_rawDesc
)

func file_containerService_proto_rawDescGZIP() []byte {
	file_containerService_proto_rawDescOnce.Do(func() {
		file_containerService_proto_rawDescData = protoimpl.X.CompressGZIP(file_containerService_proto_rawDescData)
	})
	return file_containerService_proto_rawDescData
}

var file_containerService_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_containerService_proto_msgTypes = make([]protoimpl.MessageInfo, 35)
var file_containerService_proto_goTypes = []interface{}{
	(DockerImageResponse_Status)(0),   // 0: fr.centralesupelec.gRPC.DockerImageResponse.Status
	(DeployResponse_Status)(0),        // 1: fr.centralesupelec.gRPC.DeployResponse.Status
	(*NodeIPRequest)(nil),             // 2: fr.centralesupelec.gRPC.NodeIPRequest
	(*NodeIPResponse)(nil),            // 3: fr.centralesupelec.gRPC.NodeIPResponse
	(*InitAutoscalingRequest)(nil),    // 4: fr.centralesupelec.gRPC.InitAutoscalingRequest
	(*OwnerAutoscalingConfig)(nil),    // 5: fr.centralesupelec.gRPC.OwnerAutoscalingConfig
	(*ScalingRegion)(nil),             // 6: fr.centralesupelec.gRPC.ScalingRegion
	(*InitAutoscalingResponse)(nil),   // 7: fr.centralesupelec.gRPC.InitAutoscalingResponse
	(*LogRequest)(nil),                // 8: fr.centralesupelec.gRPC.LogRequest
	(*LogResponse)(nil),               // 9: fr.centralesupelec.gRPC.LogResponse
	(*UserPasswordMethod)(nil),        // 10: fr.centralesupelec.gRPC.UserPasswordMethod
	(*AuthenticationKeyMethod)(nil),   // 11: fr.centralesupelec.gRPC.AuthenticationKeyMethod
	(*ResourceLimit)(nil),             // 12: fr.centralesupelec.gRPC.ResourceLimit
	(*Metadata)(nil),                  // 13: fr.centralesupelec.gRPC.Metadata
	(*RequestPort)(nil),               // 14: fr.centralesupelec.gRPC.RequestPort
	(*ResponsePort)(nil),              // 15: fr.centralesupelec.gRPC.ResponsePort
	(*Label)(nil),                     // 16: fr.centralesupelec.gRPC.Label
	(*ContainerRequestOptions)(nil),   // 17: fr.centralesupelec.gRPC.ContainerRequestOptions
	(*ContainerRequest)(nil),          // 18: fr.centralesupelec.gRPC.ContainerRequest
	(*ContainerResponse)(nil),         // 19: fr.centralesupelec.gRPC.ContainerResponse
	(*AdminContainerRequest)(nil),     // 20: fr.centralesupelec.gRPC.AdminContainerRequest
	(*AdminContainerResponse)(nil),    // 21: fr.centralesupelec.gRPC.AdminContainerResponse
	(*SaveDataRequest)(nil),           // 22: fr.centralesupelec.gRPC.SaveDataRequest
	(*SaveDataResponse)(nil),          // 23: fr.centralesupelec.gRPC.SaveDataResponse
	(*ShutdownContainerRequest)(nil),  // 24: fr.centralesupelec.gRPC.ShutdownContainerRequest
	(*ShutdownContainerResponse)(nil), // 25: fr.centralesupelec.gRPC.ShutdownContainerResponse
	(*DockerImageRequest)(nil),        // 26: fr.centralesupelec.gRPC.DockerImageRequest
	(*DockerImageResponse)(nil),       // 27: fr.centralesupelec.gRPC.DockerImageResponse
	(*Worker)(nil),                    // 28: fr.centralesupelec.gRPC.Worker
	(*DeployRequest)(nil),             // 29: fr.centralesupelec.gRPC.DeployRequest
	(*DeployResponse)(nil),            // 30: fr.centralesupelec.gRPC.DeployResponse
	(*DelayDeletionRequest)(nil),      // 31: fr.centralesupelec.gRPC.DelayDeletionRequest
	(*DelayDeletionResponse)(nil),     // 32: fr.centralesupelec.gRPC.DelayDeletionResponse
	nil,                               // 33: fr.centralesupelec.gRPC.InitAutoscalingRequest.OwnersEntry
	nil,                               // 34: fr.centralesupelec.gRPC.Metadata.TagsEntry
	(*ContainerRequestOptions_AuthenticationKeyOption)(nil), // 35: fr.centralesupelec.gRPC.ContainerRequestOptions.AuthenticationKeyOption
	nil, // 36: fr.centralesupelec.gRPC.ContainerRequestOptions.GenericResourcesEntry
}
var file_containerService_proto_depIdxs = []int32{
	33, // 0: fr.centralesupelec.gRPC.InitAutoscalingRequest.owners:type_name -> fr.centralesupelec.gRPC.InitAutoscalingRequest.OwnersEntry
	6,  // 1: fr.centralesupelec.gRPC.OwnerAutoscalingConfig.regions:type_name -> fr.centralesupelec.gRPC.ScalingRegion
	34, // 2: fr.centralesupelec.gRPC.Metadata.tags:type_name -> fr.centralesupelec.gRPC.Metadata.TagsEntry
	35, // 3: fr.centralesupelec.gRPC.ContainerRequestOptions.authenticationKey:type_name -> fr.centralesupelec.gRPC.ContainerRequestOptions.AuthenticationKeyOption
	12, // 4: fr.centralesupelec.gRPC.ContainerRequestOptions.limit:type_name -> fr.centralesupelec.gRPC.ResourceLimit
	10, // 5: fr.centralesupelec.gRPC.ContainerRequestOptions.userPassword:type_name -> fr.centralesupelec.gRPC.UserPasswordMethod
	36, // 6: fr.centralesupelec.gRPC.ContainerRequestOptions.genericResources:type_name -> fr.centralesupelec.gRPC.ContainerRequestOptions.GenericResourcesEntry
	16, // 7: fr.centralesupelec.gRPC.ContainerRequestOptions.forbiddenLabels:type_name -> fr.centralesupelec.gRPC.Label
	16, // 8: fr.centralesupelec.gRPC.ContainerRequestOptions.mandatoryLabels:type_name -> fr.centralesupelec.gRPC.Label
	13, // 9: fr.centralesupelec.gRPC.ContainerRequest.metadata:type_name -> fr.centralesupelec.gRPC.Metadata
	17, // 10: fr.centralesupelec.gRPC.ContainerRequest.options:type_name -> fr.centralesupelec.gRPC.ContainerRequestOptions
	14, // 11: fr.centralesupelec.gRPC.ContainerRequest.ports:type_name -> fr.centralesupelec.gRPC.RequestPort
	15, // 12: fr.centralesupelec.gRPC.ContainerResponse.ports:type_name -> fr.centralesupelec.gRPC.ResponsePort
	17, // 13: fr.centralesupelec.gRPC.ContainerResponse.options:type_name -> fr.centralesupelec.gRPC.ContainerRequestOptions
	10, // 14: fr.centralesupelec.gRPC.ContainerResponse.userPassword:type_name -> fr.centralesupelec.gRPC.UserPasswordMethod
	11, // 15: fr.centralesupelec.gRPC.ContainerResponse.authenticationKey:type_name -> fr.centralesupelec.gRPC.AuthenticationKeyMethod
	14, // 16: fr.centralesupelec.gRPC.AdminContainerRequest.port:type_name -> fr.centralesupelec.gRPC.RequestPort
	15, // 17: fr.centralesupelec.gRPC.AdminContainerResponse.port:type_name -> fr.centralesupelec.gRPC.ResponsePort
	10, // 18: fr.centralesupelec.gRPC.AdminContainerResponse.userPassword:type_name -> fr.centralesupelec.gRPC.UserPasswordMethod
	13, // 19: fr.centralesupelec.gRPC.SaveDataRequest.metadata:type_name -> fr.centralesupelec.gRPC.Metadata
	0,  // 20: fr.centralesupelec.gRPC.DockerImageResponse.status:type_name -> fr.centralesupelec.gRPC.DockerImageResponse.Status
	28, // 21: fr.centralesupelec.gRPC.DeployRequest.workers:type_name -> fr.centralesupelec.gRPC.Worker
	1,  // 22: fr.centralesupelec.gRPC.DeployResponse.status:type_name -> fr.centralesupelec.gRPC.DeployResponse.Status
	13, // 23: fr.centralesupelec.gRPC.DelayDeletionRequest.metadata:type_name -> fr.centralesupelec.gRPC.Metadata
	5,  // 24: fr.centralesupelec.gRPC.InitAutoscalingRequest.OwnersEntry.value:type_name -> fr.centralesupelec.gRPC.OwnerAutoscalingConfig
	18, // 25: fr.centralesupelec.gRPC.containerService.getContainer:input_type -> fr.centralesupelec.gRPC.ContainerRequest
	22, // 26: fr.centralesupelec.gRPC.containerService.saveData:input_type -> fr.centralesupelec.gRPC.SaveDataRequest
	20, // 27: fr.centralesupelec.gRPC.containerService.getAdminContainer:input_type -> fr.centralesupelec.gRPC.AdminContainerRequest
	26, // 28: fr.centralesupelec.gRPC.containerService.buildDockerImage:input_type -> fr.centralesupelec.gRPC.DockerImageRequest
	29, // 29: fr.centralesupelec.gRPC.containerService.deployInfra:input_type -> fr.centralesupelec.gRPC.DeployRequest
	8,  // 30: fr.centralesupelec.gRPC.containerService.getLogs:input_type -> fr.centralesupelec.gRPC.LogRequest
	24, // 31: fr.centralesupelec.gRPC.containerService.shutdownContainer:input_type -> fr.centralesupelec.gRPC.ShutdownContainerRequest
	31, // 32: fr.centralesupelec.gRPC.containerService.delayDeletion:input_type -> fr.centralesupelec.gRPC.DelayDeletionRequest
	4,  // 33: fr.centralesupelec.gRPC.containerService.initAutoscaling:input_type -> fr.centralesupelec.gRPC.InitAutoscalingRequest
	2,  // 34: fr.centralesupelec.gRPC.containerService.getNodeIP:input_type -> fr.centralesupelec.gRPC.NodeIPRequest
	19, // 35: fr.centralesupelec.gRPC.containerService.getContainer:output_type -> fr.centralesupelec.gRPC.ContainerResponse
	23, // 36: fr.centralesupelec.gRPC.containerService.saveData:output_type -> fr.centralesupelec.gRPC.SaveDataResponse
	21, // 37: fr.centralesupelec.gRPC.containerService.getAdminContainer:output_type -> fr.centralesupelec.gRPC.AdminContainerResponse
	27, // 38: fr.centralesupelec.gRPC.containerService.buildDockerImage:output_type -> fr.centralesupelec.gRPC.DockerImageResponse
	30, // 39: fr.centralesupelec.gRPC.containerService.deployInfra:output_type -> fr.centralesupelec.gRPC.DeployResponse
	9,  // 40: fr.centralesupelec.gRPC.containerService.getLogs:output_type -> fr.centralesupelec.gRPC.LogResponse
	25, // 41: fr.centralesupelec.gRPC.containerService.shutdownContainer:output_type -> fr.centralesupelec.gRPC.ShutdownContainerResponse
	32, // 42: fr.centralesupelec.gRPC.containerService.delayDeletion:output_type -> fr.centralesupelec.gRPC.DelayDeletionResponse
	7,  // 43: fr.centralesupelec.gRPC.containerService.initAutoscaling:output_type -> fr.centralesupelec.gRPC.InitAutoscalingResponse
	3,  // 44: fr.centralesupelec.gRPC.containerService.getNodeIP:output_type -> fr.centralesupelec.gRPC.NodeIPResponse
	35, // [35:45] is the sub-list for method output_type
	25, // [25:35] is the sub-list for method input_type
	25, // [25:25] is the sub-list for extension type_name
	25, // [25:25] is the sub-list for extension extendee
	0,  // [0:25] is the sub-list for field type_name
}

func init() { file_containerService_proto_init() }
func file_containerService_proto_init() {
	if File_containerService_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_containerService_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NodeIPRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_containerService_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NodeIPResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_containerService_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InitAutoscalingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_containerService_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OwnerAutoscalingConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_containerService_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScalingRegion); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_containerService_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InitAutoscalingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_containerService_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LogRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_containerService_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LogResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_containerService_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserPasswordMethod); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_containerService_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthenticationKeyMethod); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_containerService_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResourceLimit); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_containerService_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Metadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_containerService_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestPort); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_containerService_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponsePort); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_containerService_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Label); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_containerService_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ContainerRequestOptions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_containerService_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ContainerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_containerService_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ContainerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_containerService_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdminContainerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_containerService_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdminContainerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_containerService_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SaveDataRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_containerService_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SaveDataResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_containerService_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShutdownContainerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_containerService_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShutdownContainerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_containerService_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DockerImageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_containerService_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DockerImageResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_containerService_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Worker); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_containerService_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeployRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_containerService_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeployResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_containerService_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelayDeletionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_containerService_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelayDeletionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_containerService_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ContainerRequestOptions_AuthenticationKeyOption); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_containerService_proto_msgTypes[17].OneofWrappers = []interface{}{
		(*ContainerResponse_UserPassword)(nil),
		(*ContainerResponse_AuthenticationKey)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_containerService_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   35,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_containerService_proto_goTypes,
		DependencyIndexes: file_containerService_proto_depIdxs,
		EnumInfos:         file_containerService_proto_enumTypes,
		MessageInfos:      file_containerService_proto_msgTypes,
	}.Build()
	File_containerService_proto = out.File
	file_containerService_proto_rawDesc = nil
	file_containerService_proto_goTypes = nil
	file_containerService_proto_depIdxs = nil
}
